% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile.R
\name{ensemble}
\alias{ensemble}
\title{Run ensemble simulation}
\usage{
ensemble(
  sfm,
  n = 10,
  threaded = TRUE,
  qs = c(0.025, 0.975),
  return_sims = TRUE,
  range = NULL,
  cross = FALSE,
  keep_nonnegative_flow = TRUE,
  keep_nonnegative_stock = FALSE,
  keep_unit = TRUE,
  only_stocks = TRUE,
  verbose = TRUE,
  debug = FALSE
)
}
\arguments{
\item{sfm}{Stock-and-flow model, object of class sdbuildR_xmile.}

\item{n}{Number of simulations to run in the ensemble. When range is specified, n defines the number of simulations to run per condition. If each condition only needs to be run once, set n = 1. Defaults to 10.}

\item{threaded}{If TRUE, run the ensemble in threaded. Defaults to TRUE.}

\item{qs}{Quantiles to calculate in the summary, e.g. c(0.025, 0.975).}

\item{return_sims}{If TRUE, return the individual simulations in the ensemble. Set to FALSE to save memory. Defaults to TRUE.}

\item{range}{List of ranges to vary parameters in the ensemble. Only stocks and constants can be specified. All ranges have to be of the same length if cross = FALSE. Defaults to NULL.}

\item{cross}{If TRUE, cross the parameters in the range list to generate all possible combinations of parameters. Defaults to TRUE.}

\item{keep_nonnegative_flow}{If TRUE, keeps original non-negativity setting of flows. Defaults to TRUE.}

\item{keep_nonnegative_stock}{If TRUE, keeps original non-negativity setting of stocks Defaults to TRUE.}

\item{keep_unit}{If TRUE, keeps units of variables. Defaults to TRUE.}

\item{only_stocks}{If TRUE, only save stocks. If FALSE, auxiliaries and flows are saved using a callback function. Only applies if language is set to "Julia" in sim_specs() and no delay functions are used. Defaults to FALSE.}

\item{verbose}{If TRUE, update on progress. Defaults to FALSE.}

\item{debug}{If TRUE, print output for debugging. Defaults to FALSE.}
}
\value{
Object of class sdbuildR_ensemble, which is a list containing:
\describe{
\item{success}{If TRUE, simulation was successful. If FALSE, simulation failed.}
\item{error_message}{If success is FALSE, contains the error message.}
\item{df}{Dataframe with simulation results in long format, if return_sims is TRUE. The iteration number is indicated by column "i". If range was specified, the condition is indicated by column "j".}
\item{summary}{Dataframe with summary statistics of the ensemble, including quantiles specified in qs. If range was specified, summary statistics are calculated for each condition (j) in the ensemble.}
\item{n}{Number of simulations run in the ensemble (per condition j if range is specified).}
\item{total_n}{Total number of simulations run in the ensemble (across all conditions if range is specified).}
\item{conditions}{Dataframe with the conditions used in the ensemble, if range is specified.}
\item{constants}{Dataframe with the constant parameters used in the ensemble. The first two columns are "j" (iteration number) and "i" (parameter index), followed by the parameter names.}
\item{script}{Julia script used for the ensemble simulation.}
\item{duration}{Duration of the simulation in seconds.}
\item{...}{Other parameters passed to ensemble}
}
}
\description{
Run ensemble simulation
}
