# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

name: pkgdown.yaml

permissions: read-all

jobs:
  pkgdown:
    runs-on: ubuntu-latest
    # Only restrict concurrency for non-PR jobs
    concurrency:
      group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.9'  # Adjust to your required Julia version

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, any::JuliaConnectoR, local::.
          needs: website

      - name: Time use_julia function
        if: github.event_name != 'pull_request'
        run: |
          Rscript -e '
            library(yourpackage)  # Replace with your package name
            cat("Timing first use_julia():\n")
            time1 <- tryCatch({
              system.time(use_julia())[3]
            }, error = function(e) {
              cat("Error:", conditionMessage(e), "\n")
              NA
            })
            cat("Elapsed time:", if (is.na(time1)) "Failed" else paste(time1, "seconds"), "\n")
            cat("Running use_julia(stop = TRUE):\n")
            tryCatch({
              use_julia(stop = TRUE)
              cat("Completed successfully\n")
            }, error = function(e) {
              cat("Error:", conditionMessage(e), "\n")
            })
            cat("Timing second use_julia():\n")
            time2 <- tryCatch({
              system.time(use_julia())[3]
            }, error = function(e) {
              cat("Error:", conditionMessage(e), "\n")
              NA
            })
            cat("Elapsed time:", if (is.na(time2)) "Failed" else paste(time2, "seconds"), "\n")
            cat("Timing third use_julia():\n")
            time3 <- tryCatch({
              system.time(use_julia())[3]
            }, error = function(e) {
              cat("Error:", conditionMessage(e), "\n")
              NA
            })
            cat("Elapsed time:", if (is.na(time3)) "Failed" else paste(time3, "seconds"), "\n")
          '
        shell: bash

      - name: Build site
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Deploy to GitHub pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: docs
